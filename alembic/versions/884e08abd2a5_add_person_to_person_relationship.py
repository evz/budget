"""Add person to person relationship

Revision ID: 884e08abd2a5
Revises: 5feec4046926
Create Date: 2018-02-03 15:07:50.951782

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '884e08abd2a5'
down_revision = '5feec4046926'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.execute('''
        ALTER TABLE iou DROP CONSTRAINT iou_owee_id_fkey
    ''')

    op.execute('''
        ALTER TABLE iou DROP CONSTRAINT iou_ower_id_fkey
    ''')

    op.execute('''
        ALTER TABLE person DROP CONSTRAINT person_pkey
    ''')

    op.execute('''
        ALTER TABLE person ADD PRIMARY KEY (phone_number)
    ''')

    op.execute('''
        ALTER TABLE person ADD CONSTRAINT unique_phone_number UNIQUE (phone_number)
    ''')

    op.create_table('person_to_person',
    sa.Column('from_phone', sa.String(length=15), nullable=False),
    sa.Column('to_phone', sa.String(length=15), nullable=False),
    sa.Column('alias', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['from_phone'], ['person.phone_number'], ),
    sa.ForeignKeyConstraint(['to_phone'], ['person.phone_number'], ),
    sa.PrimaryKeyConstraint('from_phone', 'alias')
    )

    op.execute('''
        ALTER TABLE iou ALTER COLUMN owee_id TYPE VARCHAR
    ''')

    op.execute('''
        ALTER TABLE iou ALTER COLUMN ower_id TYPE VARCHAR
    ''')

    op.execute('''
        UPDATE iou SET
          owee_id = s.phone_number
        FROM (
          SELECT
            person.phone_number,
            iou.id,
            iou.owee_id
          FROM person
          JOIN iou
          ON person.id::varchar = iou.owee_id
        ) AS s
        WHERE iou.id = s.id
    ''')

    op.execute('''
        UPDATE iou SET
          ower_id = s.phone_number
        FROM (
          SELECT
            person.phone_number,
            iou.id,
            iou.ower_id
          FROM person
          JOIN iou
          ON person.id::varchar = iou.ower_id
        ) AS s
        WHERE iou.id = s.id
    ''')


    op.create_foreign_key(None, 'iou', 'person', ['owee_id'], ['phone_number'])
    op.create_foreign_key(None, 'iou', 'person', ['ower_id'], ['phone_number'])
    op.drop_constraint('person_name_key', 'person', type_='unique')

    op.execute('''
        ALTER TABLE person DROP COLUMN id CASCADE
    ''')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('person', sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False))
    op.create_unique_constraint('person_name_key', 'person', ['name'])
    op.drop_constraint(None, 'iou', type_='foreignkey')
    op.drop_constraint(None, 'iou', type_='foreignkey')
    op.create_foreign_key('iou_owee_id_fkey', 'iou', 'person', ['owee_id'], ['id'])
    op.create_foreign_key('iou_ower_id_fkey', 'iou', 'person', ['ower_id'], ['id'])
    op.drop_table('person_to_person')
    # ### end Alembic commands ###
